// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de credenciales del usuario
model User {
  id             Int      @id @default(autoincrement()) // Identificador 칰nico
  email          String   @unique // Correo electr칩nico 칰nico
  password       String   // Contrase침a (encriptada)
  resetToken     String?  // Token para resetear la contrase침a, si es necesario
  resetTokenExp  DateTime? // Expiraci칩n del token de reset
  createdAt      DateTime @default(now()) // Fecha de creaci칩n
  updatedAt      DateTime @updatedAt // Fecha de 칰ltima actualizaci칩n
    isActive  Boolean  @default(true) // 游녣 Aqu칤

  profile        UserProfile? @relation(fields: [userProfileId], references: [id]) // Relaci칩n opcional con el perfil del usuario
  userProfileId  Int?     @unique // Clave for치nea que apunta a UserProfile, opcional y 칰nica
  role           UserRole @default(STUDENT) // Rol del usuario, con valor predeterminado 'STUDENT'

}

// Modelo del perfil del usuario (informaci칩n personal)
model UserProfile {
  id             Int       @id @default(autoincrement()) // Identificador 칰nico
  firstName      String    // Primer nombre del usuario
  lastName       String    // Apellido
  phoneNumber    String?   // N칰mero de tel칠fono
  address        String?   // Direcci칩n del usuario
  avatarUrl      String?   // URL de la foto de perfil
  dateOfBirth    DateTime? // Fecha de nacimiento
  user           User? @relation // Relaci칩n con las credenciales de usuario, ahora opcional
  createdAt      DateTime  @default(now()) // Fecha de creaci칩n
  updatedAt      DateTime  @updatedAt // Fecha de 칰ltima actualizaci칩n
}

// Enum para roles de usuario
enum UserRole {
  ADMIN
  STUDENT
}
